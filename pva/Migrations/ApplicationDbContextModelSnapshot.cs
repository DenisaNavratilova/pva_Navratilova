// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace pva.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pva.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<int>("DroughtLevel")
                        .HasColumnType("int");

                    b.Property<int>("FloodLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeOutinMinutes")
                        .HasColumnType("int");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            DroughtLevel = 40,
                            FloodLevel = 90,
                            Name = "Colorado River",
                            TimeOutinMinutes = 35
                        },
                        new
                        {
                            StationId = 2,
                            DroughtLevel = 40,
                            FloodLevel = 90,
                            Name = "Mississippi",
                            TimeOutinMinutes = 35
                        },
                        new
                        {
                            StationId = 3,
                            DroughtLevel = 1,
                            FloodLevel = 70,
                            Name = "Amargosa",
                            TimeOutinMinutes = 95
                        },
                        new
                        {
                            StationId = 4,
                            DroughtLevel = 1,
                            FloodLevel = 70,
                            Name = "Gila",
                            TimeOutinMinutes = 95
                        },
                        new
                        {
                            StationId = 5,
                            DroughtLevel = 35,
                            FloodLevel = 85,
                            Name = "Hudson",
                            TimeOutinMinutes = 65
                        },
                        new
                        {
                            StationId = 6,
                            DroughtLevel = 30,
                            FloodLevel = 80,
                            Name = "Columbia",
                            TimeOutinMinutes = 45
                        },
                        new
                        {
                            StationId = 7,
                            DroughtLevel = 25,
                            FloodLevel = 75,
                            Name = "Snake",
                            TimeOutinMinutes = 45
                        },
                        new
                        {
                            StationId = 8,
                            DroughtLevel = 38,
                            FloodLevel = 88,
                            Name = "Arkansas",
                            TimeOutinMinutes = 75
                        },
                        new
                        {
                            StationId = 9,
                            DroughtLevel = 27,
                            FloodLevel = 77,
                            Name = "Rio Grande",
                            TimeOutinMinutes = 25
                        },
                        new
                        {
                            StationId = 10,
                            DroughtLevel = 30,
                            FloodLevel = 80,
                            Name = "Yukon",
                            TimeOutinMinutes = 65
                        });
                });

            modelBuilder.Entity("pva.Models.Value", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ValueId");

                    b.HasIndex("StationId");

                    b.ToTable("Values");

                    b.HasData(
                        new
                        {
                            ValueId = 1,
                            Level = 41,
                            StationId = 1,
                            Timestamp = new DateTime(2024, 7, 23, 9, 45, 59, 400, DateTimeKind.Local).AddTicks(2095)
                        },
                        new
                        {
                            ValueId = 2,
                            Level = 65,
                            StationId = 2,
                            Timestamp = new DateTime(2024, 7, 23, 9, 45, 59, 400, DateTimeKind.Local).AddTicks(2142)
                        },
                        new
                        {
                            ValueId = 3,
                            Level = 27,
                            StationId = 3,
                            Timestamp = new DateTime(2024, 7, 23, 9, 45, 59, 400, DateTimeKind.Local).AddTicks(2145)
                        },
                        new
                        {
                            ValueId = 4,
                            Level = 73,
                            StationId = 4,
                            Timestamp = new DateTime(2024, 7, 23, 9, 45, 59, 400, DateTimeKind.Local).AddTicks(2148)
                        });
                });

            modelBuilder.Entity("pva.Models.Value", b =>
                {
                    b.HasOne("pva.Models.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });
#pragma warning restore 612, 618
        }
    }
}
