@page
@model pva.Pages.Stations.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Detail</h1>

<div>
    <h4>Station</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Station.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Station.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Station.FloodLevel)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Station.FloodLevel)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Station.DroughtLevel)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Station.DroughtLevel)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Station.TimeOutinMinutes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Station.TimeOutinMinutes)
        </dd>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Station?.StationId" id="edit">Edit</a>
</div>

<div style="max-width: 800px; margin-top: 20px;">
    <canvas id="stationChart" width="800" height="400"></canvas>
</div>
<br />
<a asp-page="./Index">Back to List</a>
<br />

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            var ctx = document.getElementById('stationChart').getContext('2d');

            var historicalData = @Html.Raw(Json.Serialize(Model.HistoricalData));

            var labels = historicalData.map(d => new Date(d.date).toLocaleDateString());
            var averageLevels = historicalData.map(d => d.averageLevel);

            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Average Level',
                        data: averageLevels,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'category',
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Average Level'
                            }
                        }
                    }
                }
            });
        });
    </script>
}
